/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package geust_house.myFrame;

import  geust_house.guesthouse.DataConnection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author SIENGHORN
 */
public class frmProduct extends javax.swing.JFrame {

    DataConnection data=new DataConnection();
    Statement stm;
    ResultSet res;
    PreparedStatement pst=null;
    DefaultTableModel m=new DefaultTableModel();
    SimpleDateFormat df=new SimpleDateFormat("YYYY-MM-DD HH-mm-ss");
    Calendar c=Calendar.getInstance();
    String pName;
    int pID,room_id,invoice_id=0;
    public frmProduct(){
        initComponents();
    }
    public frmProduct(int room_id) {
        this.room_id=room_id;
            m.addColumn("NO.");
            m.addColumn("Product Name");
            m.addColumn("Quantity");
            m.addColumn("Price");
            m.addColumn("Amount");
           
            try {
                initComponents();
                lblDate.setText(new SimpleDateFormat("YYYY-MMM-DD").format(c.getTime()));
                //get No.invoice from tblInvoice
                stm=data.getConnectio().createStatement();
                res=stm.executeQuery(SqlConfigString.SELECT_MAXID_INVOICE);
                while(res.next()){
                    invoice_id=res.getInt(1);
                    lblInvoice.setText((invoice_id+1)+"");
                }
                res.close();
                //init ProductName to cmbProduct
                pst=data.getConnectio().prepareStatement(SqlConfigString.SELECT_PRODUCT);
                res=pst.executeQuery();
                while(res.next()){
                    cmbProduct.addItem(res.getString(2));
                }
                res.clearWarnings();
            } catch (SQLException ex) {
                Logger.getLogger(frmProduct.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(frmProduct.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                Logger.getLogger(frmProduct.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                Logger.getLogger(frmProduct.class.getName()).log(Level.SEVERE, null, ex);
            }
            //select data of a product that user click from tblProduct in Database
          
       
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbProduct = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProduct = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        btnRemove = new javax.swing.JButton();
        btnOk = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        lblInvoice = new javax.swing.JLabel();
        txtTotal1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Product Service");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(173, 173, 173)
                .addComponent(jLabel1)
                .addGap(85, 85, 85)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Select Product");

        cmbProduct.setFont(new java.awt.Font("Khmer UI", 0, 13)); // NOI18N
        cmbProduct.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cmbProductPropertyChange(evt);
            }
        });

        jLabel6.setText("Date");

        lblDate.setText(" ");

        tblProduct.setFont(new java.awt.Font("Khmer UI", 0, 13)); // NOI18N
        tblProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Product Name", "Price", "Quantity", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProduct.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblProductFocusGained(evt);
            }
        });
        tblProduct.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tblProductPropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(tblProduct);

        btnAdd.setFont(new java.awt.Font("Khmer UI", 0, 13)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel3.setText("Total: ");

        btnRemove.setText("Remove");
        btnRemove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRemoveMouseClicked(evt);
            }
        });
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnOk.setText("OK");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        jLabel4.setText("Quantity");

        jLabel8.setText("No.Invoice");

        lblInvoice.setText(" ");

        jLabel9.setText("Pay:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblInvoice, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(43, 43, 43))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 399, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTotal1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRemove, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnOk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(113, 113, 113))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(lblDate)
                    .addComponent(jLabel8)
                    .addComponent(lblInvoice))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnOk)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtTotal1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        try {
            //get cus_id
            int cus_id=0;
            pst=data.getConnectio().prepareStatement(SqlConfigString.GET_CUSID_TO_INSERT_INTO_INVOICE);
            pst.setInt(1, room_id);
            res=pst.executeQuery();
            while(res.next()){
               cus_id=res.getInt(1);             
            }
            res.close();
            //get all value to insert into tblinvoice;
            String date=df.format(c.getTime());
            float total=Float.parseFloat(txtTotal.getText());
            float pay=Float.parseFloat(txtTotal1.getText());
            //insert into invoice
            pst=data.getConnectio().prepareStatement(SqlConfigString.INSERT_INTO_INVOICE);
            pst.setString(1,date);
            pst.setInt(2,cus_id);
            pst.setInt(3, 1);
            pst.setFloat(4, total);
            pst.setFloat(5, pay);
            pst.execute();
            pst.close();

            for(int i=0;i<tblProduct.getRowCount();i++){
                //insert into invoice detail
                int product_id=Integer.parseInt(tblProduct.getValueAt(i, 0).toString());
                int qty=Integer.parseInt(tblProduct.getValueAt(i,2).toString());
                float price=Float.parseFloat(tblProduct.getValueAt(i,3).toString());
                int type=0;
                pst=data.getConnectio().prepareStatement(SqlConfigString.INSERT_INTO_INVOICE_DETAIL);
                pst.setInt(1,(invoice_id+1));
                pst.setInt(2,product_id);
                pst.setInt(3,qty);
                pst.setFloat(4, price);
                pst.setFloat(5,qty*price);
                pst.execute();
                pst.close();
                //update stock of product
               pst=data.getConnectio().prepareStatement(SqlConfigString.SELECT_PRODUCT_TYPE);
               pst.setInt(1,product_id);
               res=pst.executeQuery();
               while(res.next()){
                   type=res.getInt(1);
               }
               res.close();
               if(type!=3){
                   pst=data.getConnectio().prepareStatement(SqlConfigString.INSERT_INTO_PRO_TRANSACTION);
                   pst.setInt(1,product_id);
                   pst.setString(2, date);
                   pst.setInt(3,-qty);
                   pst.setFloat(4, price);
                   pst.setInt(5,cus_id);
                   pst.setInt(6,1);
                   pst.execute();
                   pst.close();
                  
               }
            }
           
            
    
           JOptionPane.showMessageDialog(this,"Order Successfully");
           new frmAddService().dispose();
           this.dispose();
           
        } catch (SQLException ex) {
            Logger.getLogger(frmProduct.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frmProduct.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(frmProduct.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(frmProduct.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed

    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnRemoveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRemoveMouseClicked
        for(int i=0;i<tblProduct.getSelectedRows().length;i++){
            m.removeRow(tblProduct.getSelectedRows()[i]);
        }

    }//GEN-LAST:event_btnRemoveMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try {
            pName= (String) cmbProduct.getSelectedItem();
             float t=0;
            if(txtQuantity.getText().equals("")){
                JOptionPane.showMessageDialog(this,"Please Input the Quantity of Product");
            }
            else{
            int qty=Integer.parseInt(txtQuantity.getText());
            int qty_instock=0,type=0;
           
            //get Product_id and Product_type
            pst=data.getConnectio().prepareStatement("select product_id,product_type_id from product where product_name=?");
            pst.setString(1, pName);
            res=pst.executeQuery();
            while(res.next()){
                pID=res.getInt(1);
                type=res.getInt(2);
            }
            res.close();
            //Checking ProductType
            if(type!=3){
                //check that quantity of selected product is avaiable or noyt
                pst=data.getConnectio().prepareStatement(SqlConfigString.STOCK_BALANCING);
                pst.setInt(1,pID);
                res=pst.executeQuery();
                while(res.next()){
                    qty_instock=res.getInt(1);
                }
                res.close();
                //if
                if(qty>qty_instock){
                    JOptionPane.showMessageDialog(this,pName+ " in stock now : "+qty_instock);
                }
                else{
                    //get all value of the selected product
                    pst=data.getConnectio().prepareStatement(SqlConfigString.SELECT_PRODUCT_BYNAME);
                    pst.setString(1, pName);
                    res=pst.executeQuery();
                    //init Value to tblProduct in Form
                    tblProduct.setModel(m);
                    boolean x=true;
                    while(res.next()){

                        //Check if table is empty and add new row
                        if(tblProduct.getRowCount()==0){
                            m.addRow(new Object[]{res.getInt(1),res.getString(2),qty,res.getFloat(4),res.getFloat(4)});

                        }
                        else{
                            //Update Qauntity of the same product
                            for(int i=0;i<tblProduct.getRowCount();i++){
                                String pName=(String) tblProduct.getValueAt(i,1);
                                if(cmbProduct.getSelectedItem().toString().equalsIgnoreCase(pName)){
                                    float p=(float) tblProduct.getValueAt(i,3);
                                    m.setValueAt(qty, i,2);
                                    m.setValueAt((qty)*p, i,4);
                                    x=false;
                                }
                            }
                            //Add New Row
                            if(x==true){
                                m.addRow(new Object[]{res.getInt(1),res.getString(2),qty,res.getFloat(4),res.getFloat(4)});
                            }
                        }
                    }
                    res.close();
                }
            }
            else{
                pst=data.getConnectio().prepareStatement(SqlConfigString.SELECT_PRODUCT_BYNAME);
                pst.setString(1, pName);
                res=pst.executeQuery();
                //init Value to tblProduct in Form
                tblProduct.setModel(m);
                boolean x=true;
                while(res.next()){

                    //Check if table is empty and add new row
                    if(tblProduct.getRowCount()==0){
                        m.addRow(new Object[]{res.getInt(1),res.getString(2),qty,res.getFloat(4),qty*res.getFloat(4)});

                    }
                    else{
                        //Update Qauntity of the same product
                        for(int i=0;i<tblProduct.getRowCount();i++){
                            String pName=(String) tblProduct.getValueAt(i,1);
                            if(cmbProduct.getSelectedItem().toString().equalsIgnoreCase(pName)){
                                float p=(float) tblProduct.getValueAt(i,3);
                                m.setValueAt(qty, i,2);
                                m.setValueAt((qty)*p, i,4);
                                x=false;
                            }
                        }
                        //Add New Row
                        if(x==true){
                            m.addRow(new Object[]{res.getInt(1),res.getString(2),qty,res.getFloat(4),res.getFloat(4)});
                        }
                    }
                }
                res.close();
            }
            }
            //sum the amount and set to txtTotal
            for(int i=0;i<tblProduct.getRowCount();i++){
                t+=(float) tblProduct.getValueAt(i, 4);
                txtTotal.setText(t+"");
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmProduct.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frmProduct.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(frmProduct.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(frmProduct.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnAddActionPerformed

    private void tblProductPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tblProductPropertyChange

    }//GEN-LAST:event_tblProductPropertyChange

    private void tblProductFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblProductFocusGained

    }//GEN-LAST:event_tblProductFocusGained

    private void cmbProductPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cmbProductPropertyChange

    }//GEN-LAST:event_cmbProductPropertyChange

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabel5MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmProduct().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnOk;
    private javax.swing.JButton btnRemove;
    private javax.swing.JComboBox<String> cmbProduct;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblInvoice;
    private javax.swing.JTable tblProduct;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtTotal1;
    // End of variables declaration//GEN-END:variables
}
